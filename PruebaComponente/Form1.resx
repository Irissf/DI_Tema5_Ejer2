<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="etiquetaAviso1.ImagenMarca" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAxUAAAGLCAYAAACx7r8QAAAABGdBTUEAALGPC/xhBQAAC+ZJREFUeF7t
        20uqbVcVx+ENRhFtgA0QI8FHC7QB1hTx1QrtR0RLoljXUkAQLN1+iNYEwZo1xXiTuDwrMmEyma+9/+eY
        vS/fhQ+SOcbY5fUjN5fj6c/r1x8cP3v3N8c7X/ze8bm3vgEAADD01bd/cPz8p7/9uCPOP5fzH7725R92
        lwEAAEbOjvjww4+Oyy9/8V53AQAAYOXXv/rdcfnKl77fHQIAAKx8/Z0fHZfeAAAAYJeoAAAAIqICAACI
        iAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqIC
        AACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAA
        IqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIio
        AAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAA
        gIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAi
        KgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoA
        ACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACI
        iAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqIC
        AACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAA
        IqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIio
        AAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAA
        gIioAAAAIqICAACIiAoAACAiKgAAgIioAAAAIqICAACIiAoAACAiKgAAgMiLR8XnP/3Nod5+K9lv9fZ7
        Vjf1fOba294+AADcu6uiov34XX0Ml/lM7664ZvfU7vf07mo7++3OyC137Q0AANy77ajoffSuPoRH8/I+
        uz3Ve9fsj95X96d6d2e/trrbmY3mAABwr14sKspsNe/NTu39tfujeW9W1L+xs19b3azmp50dAAC4N9Oo
        qD9yd4xu6/dr56N/b5X5aOfa+Wy31d72XLPTmwEAwL1a/peK+mN4ZnTXvhez23re/vvufmt235uNdlu9
        257d3wMAgEdz819/Wn0k7857O6PZaH81O5V5b6f3PtqtlZ3WbLc3AwCAR3bXUbH7vpqdyrzdWb3Xbz31
        fau3V78BAMCbYCsqeh/Kq4/k3XlvZ/V+zU3Ru+29tbP2fWX0m7f+HgAA3Lu7+x+16/eZ+qa9a2ejef22
        o/69md7+zu+s5gAAcI+eLSpmt+2sno/ed4zu6vd23nvb0bur32qzm5272Q4AANybq/760+qtNdop7+1s
        9F6b7azee7OR2f7OrDe/9Q4AAO7ZTVGx+/Fb9mZG+/V7a7RT34+0NyOz/fr3Rp7zDgAA7tlWVCR6H87F
        aLd9b+38Rk+7O7O6qX+31dsvevtFbx8AAO7di0cFAADwZhMVAABARFQAAAARUQEAAEREBQAAEBEVAABA
        5PLZL3zr+Mzb3wUAALja2ROXT337xwcAAMCtRAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERU
        AAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAA
        QERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABAR
        FQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUA
        ABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABE
        RAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEB
        AABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAAEVEBAABERAUAABARFQAAQERUAAAA
        EVEBAABERAUAABARFQAAQERUAAAAEVEBAABEXjwq3vrOT4au3S+e46bo7Z56uz07N/XOSO8OAAAewVVR
        0X4Arz6Iy3zmk7rZuevd1HZ3672R3h0AADyC7ajoffyuPohH8/I+u62t9lfzntnNbFa7dq83AwCAR/di
        UVFmq3lvVlv9zmn3t2qzmzKb/ebOTrG7BwAAj2gaFfWH847Rbf2+Oy+ea6e1upnNy2y2U9vdAwCAR7T8
        LxX1x/PM6K59L2a3xc7Oqd5r9fZPybzMemb7vRkAADy6m//60+pDeXc+2imz1jW7tdF+/V4bzevbkee4
        AQCAR3G3UXGqd2qjvdF7Oxu91265G83qu5H2BgAAHsVWVPQ+flcfw7vz2U7rOW9WvzO7Gd2N5rMbAAB4
        dHf/P2rXnvNm9Tuzm9HdaD67AQCAR/dsUTG7bWf1fPVWK/N6p/dWG82Tm/Z9NZ/dAADAo7vqrz+t3lqj
        nfLezkbvs3nv7f8xa99ns9kNAAA8upuiYvcjuezNfFI3O3e33JxGN+07AAC8CbaiIlF/bLd6+6febtHb
        P/V2i95+0ds/9XaL3n4x2+/NAADg0b14VAAAAG82UQEAAEREBQAAEBEVAABARFQAAAARUQEAAEREBQAA
        ELm89/s/HAAAALe6vHr16gAAALiVqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioA
        AICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAg
        IioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgK
        AAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAA
        iIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKi
        AgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAAACKiAgAAiIgKAAAgIioAAICIqAAA
        ACKiAgAAiIgKAAAgIioAAICIqAAAACKX13/54wEAAHCry/HXPx0AAAC3EhUAAEBEVAAAABFRAQAAREQF
        AAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBEVAAAABFRAQAA
        REQFAAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBEVAAAABFR
        AQAAREQFAAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBEVAAA
        ABFRAQAAREQFAAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBEVAAAABFRAQAAREQFAAAQERUAAEBE
        VAAAABFRAQAAREQFAAAQERUAAEBEVAAAAIE/P0XF3//WGQAAAGx46onL8cG/+0MAAICVp564HOeff/2j
        vwAAADBydsTTn/9FxfnnPx8dx+v3j+P9fwIAAIyd3XD2w8d/juO/Mmhv75RTM1AAAAAASUVORK5CYII=
</value>
  </data>
</root>